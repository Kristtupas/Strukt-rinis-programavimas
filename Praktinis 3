#include <iostream>
#include <cstring>
using namespace std;

const char ABECELE[26] = { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z' };

void uzsifruotiAbecelę(const char tekstas[], const char raktas[], char rezultatas[]) {
    int tekstoIlgis = strlen(tekstas);
    int raktasIlgis = strlen(raktas);

    for (int i = 0; i < tekstoIlgis; i++) {
        if (isalpha(tekstas[i])) {
            char t = toupper(tekstas[i]);
            char r = toupper(raktas[i % raktasIlgis]);
            int tIndex = t - 'A';
            int rIndex = r - 'A';
            rezultatas[i] = ABECELE[(tIndex + rIndex) % 26];
        } else {
            rezultatas[i] = tekstas[i];
        }
    }
    rezultatas[tekstoIlgis] = '\0';
}

void desifruotiAbecele(const char tekstas[], const char raktas[], char rezultatas[]) {
    int tekstoIlgis = strlen(tekstas);
    int raktasIlgis = strlen(raktas);

    for (int i = 0; i < tekstoIlgis; i++) {
        if (isalpha(tekstas[i])) {
            char t = toupper(tekstas[i]);
            char r = toupper(raktas[i % raktasIlgis]);
            int tIndex = t - 'A';
            int rIndex = r - 'A';
            rezultatas[i] = ABECELE[(tIndex - rIndex + 26) % 26];
        } else {
            rezultatas[i] = tekstas[i];
        }
    }
    rezultatas[tekstoIlgis] = '\0';
}

void uzsifruotiASCII(const char tekstas[], const char raktas[], char rezultatas[]) {
    int tekstoIlgis = strlen(tekstas);
    int raktasIlgis = strlen(raktas);
    for (int i = 0; i < tekstoIlgis; i++) {
        if (tekstas[i] >= 33 && tekstas[i] <= 126) {
            int tIndex = tekstas[i] - 33;
            int rIndex = raktas[i % raktasIlgis] - 33;
            rezultatas[i] = (tIndex + rIndex) % 94 + 33;
        } else {
            rezultatas[i] = tekstas[i];
        }
    }
    rezultatas[tekstoIlgis] = '\0';
}

void desifruotiASCII(const char tekstas[], const char raktas[], char rezultatas[]) {
    int tekstoIlgis = strlen(tekstas);
    int raktasIlgis = strlen(raktas);
    for (int i = 0; i < tekstoIlgis; i++) {
        if (tekstas[i] >= 33 && tekstas[i] <= 126) {
            int tIndex = tekstas[i] - 33;
            int rIndex = raktas[i % raktasIlgis] - 33;
            rezultatas[i] = (tIndex - rIndex + 94) % 94 + 33;
        } else {
            rezultatas[i] = tekstas[i];
        }
    }
    rezultatas[tekstoIlgis] = '\0';
}

int main() {
    int pasirinkimas;
    char tekstas[100], raktas[100], rezultatas[100];

    while (true) {
        cout << "Pasirinkite operacija, kuria norite atlikti su tekstu:" << endl;
        cout << "1. Sifruoti naudojant abecele" << endl;
        cout << "2. Desifruoti naudojant abecele" << endl;
        cout << "3. Sifruoti naudojant ASCII koduote" << endl;
        cout << "4. Desifruoti naudojant ASCII koduote" << endl;
        cout << "5. Iseiti" << endl;
        cout << "Jusu pasirinkimas: ";
        cin >> pasirinkimas;
        cin.ignore();

        if (pasirinkimas == 5) {
            cout << "Programa baigta" << endl;
            break;
        }

        cout << "Irasykite teksta: ";
        cin.getline(tekstas, 100);
        cout << "Irasykite rakta: ";
        cin.getline(raktas, 100);

        if (pasirinkimas == 1) {
            uzsifruotiAbecelę(tekstas, raktas, rezultatas);
            cout << "Uzsifruotas tekstas: " << rezultatas << endl;
        } else if (pasirinkimas == 2) {
            desifruotiAbecele(tekstas, raktas, rezultatas);
            cout << "Desifruotas tekstas: " << rezultatas << endl;
        } else if (pasirinkimas == 3) {
            uzsifruotiASCII(tekstas, raktas, rezultatas);
            cout << "Uzsifruotas tekstas (ASCII): " << rezultatas << endl;
        } else if (pasirinkimas == 4) {
            desifruotiASCII(tekstas, raktas, rezultatas);
            cout << "Desifruotas tekstas (ASCII): " << rezultatas << endl;
        } else {
            cout << "Neteisingas pasirinkimas, bandykite dar karta" << endl;
        }
    }

    return 0;
}
